name: DIGIT-Install workflow for PROD
on:
  workflow_dispatch:
  repository_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  check-changed-files:
    runs-on: ubuntu-latest
    outputs:
      deploy-as-code-changed: ${{ steps.check_files.outputs.deploy-as-code-changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for changes in deploy-as-code
        id: check_files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            deploy-as-code/**

  DIGIT-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ vars.CLUSTER_NAME_PROD }}
          cat ~/.kube/config > kubeconfig

      - name: Creating namespace
        run: kubectl create namespace egov
        continue-on-error: true

      - name: Install kubectl in runner
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest' # default is latest stable
        id: install

      - name: Verfiy kubectl get nodes
        run: |
          kubectl get nodes

      - name: Install sops
        run: |
          sudo apt update
          wget https://github.com/mozilla/sops/releases/download/v3.7.1/sops-v3.7.1.linux
          chmod +x sops-v3.7.1.linux
          sudo mv sops-v3.7.1.linux /usr/local/bin/sops

      - name: sops decryption
        run: |
          aws sts get-caller-identity
          sops --decrypt --kms ${{ secrets.PUBLIC_KMS_KEY_PROD }} $HOME/work/DIGIT-DevOps/DIGIT-DevOps/deploy-as-code/charts/environments/selco-prod-secrets.yaml > env-secrets1.yaml
          cp env-secrets1.yaml $HOME/work/DIGIT-DevOps/DIGIT-DevOps/deploy-as-code/charts/environments/selco-prod-secrets.yaml
      # working-directory: deploy-as-code/charts/environments


      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'latest' # Specify the version of Helm

      - name: Install Helmfile
        uses: helmfile/helmfile-action@v1.9.0
        with:
          helmfile-version: 'v0.150.0'
          helm-plugins: >
            https://github.com/databus23/helm-diff

      - name: Parse YAML and export as environment variables
        id: set-env
        run: |
          services=$(yq e '.modules[] | select(.name == "core-dev") | .services' deploy-as-code/charts/product-release-charts/dependency_chart-selco-v2.0.0.yaml) 
          
          # Iterate over each service and export as environment variables
          echo "$services" | while IFS=":" read -r key value; do
            # Clean up key and value
            key=$(echo $key | xargs)
            value=$(echo $value | xargs)
          
            # Export as environment variable
            echo "${key}=${value}" >> $GITHUB_ENV
          done

      - name: digit deployment
        run: |
          echo ${{ env.egov-mdms-service }}
          helmfile -f digit-helmfile.yaml apply --include-needs=true\
           --set nagaland.image.tag=${{ env.nagaland }} \
           --set mizoram.image.tag=${{ env.mizoram }} \
           --set egov-hrms.image.tag=${{ env.egov-hrms }} \
           --set egov-hrms.initContainers.dbMigration.image.tag=${{ env.egov-hrms }} \
           --set egov-filestore.image.tag=${{ env.egov-filestore }} \
           --set egov-filestore.initContainers.dbMigration.image.tag=${{ env.egov-filestore }} \
           --set egov-workflow-v2.image.tag=${{ env.egov-workflow-v2 }} \
           --set egov-workflow-v2.initContainers.dbMigration.image.tag=${{ env.egov-workflow-v2 }} \
           --set im-services.image.tag=${{ env.im-services }} \
           --set im-services.initContainers.dbMigration.image.tag=${{ env.im-services }} \
           --set digit-ui.image.tag=${{ env.digit-ui }} \
           --set inbox.image.tag=${{ env.inbox }} \
        working-directory: deploy-as-code
        env:
          HELMFILE_ENV: "selco-prod"